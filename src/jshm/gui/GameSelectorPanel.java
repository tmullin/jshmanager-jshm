/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GameSelectorPanel.java
 *
 * Created on Jun 19, 2010, 5:04:05 PM
 */

package jshm.gui;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.border.Border;
import jshm.*;
import jshm.gui.renderers.GeneralListCellRenderer;
import jshm.wt.WtGameTitle;

/**
 *
 * @author Tim
 */
public class GameSelectorPanel extends javax.swing.JPanel {
	GUI gui;

	private GeneralListCellRenderer renderer = new GeneralListCellRenderer();

	private Border
		defaultBorder = null,
		errorBorder = BorderFactory.createLineBorder(Color.RED);

	private final String
		selectGame = "Game...",
		selectPlat = "Platform...",
		selectInst = "Instrument...",
		selectDiff = "Difficulty...";

	private DefaultComboBoxModel
		gameModel, platModel, instModel, diffModel;

    /** Creates new form GameSelectorPanel */
    public GameSelectorPanel() {
        initComponents();

		defaultBorder = gameCombo.getBorder();

		Vector<Object> items = new Vector<Object>();
		items.add(selectGame);

		items.addAll(GameTitle.getBySeries(GameSeries.GUITAR_HERO));
		items.addAll(GameTitle.getBySeries(GameSeries.WORLD_TOUR));
		items.addAll(GameTitle.getBySeries(GameSeries.ROCKBAND));

		gameModel = new DefaultComboBoxModel(items);
		gameCombo.setModel(gameModel);


		items = new Vector<Object>();
		items.add(selectPlat);
		for (Platform p : Platform.values())
			items.add(p);

		platModel = new DefaultComboBoxModel(items);
		platCombo.setModel(platModel);


		items = new Vector<Object>();
		items.add(selectInst);
		items.addAll(Instrument.Group.getBySize(1, true));

		instModel = new DefaultComboBoxModel(items);
		instCombo.setModel(instModel);


		diffModel = new DefaultComboBoxModel(new Object[] {
			selectDiff,
			Difficulty.EASY,
			Difficulty.MEDIUM,
			Difficulty.HARD,
			Difficulty.EXPERT,
			Difficulty.EXPERT_PLUS
		});
		diffCombo.setModel(diffModel);
	}

	public void setCombos(Game game, Instrument.Group group, Difficulty diff) {
		gameCombo.setSelectedItem(game.title);
		platCombo.setSelectedItem(game.platform);
		instCombo.setSelectedItem(group);
		diffCombo.setSelectedItem(diff);
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameCombo = new javax.swing.JComboBox();
        instCombo = new javax.swing.JComboBox();
        platCombo = new javax.swing.JComboBox();
        diffCombo = new javax.swing.JComboBox();
        goButton = new javax.swing.JButton();

        gameCombo.setRenderer(renderer);
        gameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameComboActionPerformed(evt);
            }
        });

        instCombo.setRenderer(renderer);
        instCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instComboActionPerformed(evt);
            }
        });

        platCombo.setRenderer(renderer);
        platCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                platComboActionPerformed(evt);
            }
        });

        diffCombo.setRenderer(renderer);
        diffCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diffComboActionPerformed(evt);
            }
        });

        goButton.setText("Go");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(platCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(diffCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goButton)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(gameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(platCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(instCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(diffCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(goButton))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
		Object o;
		GameTitle gt = null;
		Platform plat = null;
		Instrument.Group grp = null;
		Difficulty diff = null;
		Game game = null;

		boolean error = false;

		o = gameCombo.getSelectedItem();

		if (o instanceof GameTitle) {
			gt = (GameTitle) o;
		}


		o = platCombo.getSelectedItem();

		if (o instanceof Platform) {
			plat = (Platform) o;
		}

		try {
			game = Game.getByTitleAndPlatform(gt, plat);
		} catch (IllegalArgumentException x) {}

		o = instCombo.getSelectedItem();

		if (o instanceof Instrument.Group) {
			grp = (Instrument.Group) o;
		}


		o = diffCombo.getSelectedItem();

		if (o instanceof Difficulty) {
			diff = (Difficulty) o;
		}


		if (null == gt) {
			error = true;
			gameCombo.setBorder(errorBorder);
		} else {
			gameCombo.setBorder(defaultBorder);
		}


		if (null == plat) {
			error = true;
			platCombo.setBorder(errorBorder);
		} else {
			platCombo.setBorder(defaultBorder);
		}


		if (null == game) {
			error = true;
			gameCombo.setBorder(errorBorder);
			platCombo.setBorder(errorBorder);
		}


		if (null == grp) {
			error = true;
			instCombo.setBorder(errorBorder);
		} else {
			instCombo.setBorder(defaultBorder);

			if (null != gt && !gt.supportsInstrumentGroup(grp)) {
				error = true;
				instCombo.setBorder(errorBorder);
			}
		}


		if (null == diff) {
			error = true;
			diffCombo.setBorder(errorBorder);
		} else {
			diffCombo.setBorder(defaultBorder);

			if (Difficulty.EXPERT_PLUS == diff) {

				if (!((Instrument.Group.DRUMS == grp || Instrument.Group.WTDRUMS == grp) &&
					  gt instanceof WtGameTitle && ((WtGameTitle) gt).supportsExpertPlus)) {
					error = true;
					instCombo.setBorder(errorBorder);
					diffCombo.setBorder(errorBorder);
				}
			}
		}


		if (!error && null != gui) {
			gui.myScoresMenuItemActionPerformed(null, game, grp, diff);
		} else {
			Toolkit.getDefaultToolkit().beep();
		}
	}//GEN-LAST:event_goButtonActionPerformed

	private void gameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameComboActionPerformed
		// we'll do it the easy way for now and handle everything in goButton's actionPerformed
//		Object o = gameCombo.getSelectedItem();
//
//		if (!(o instanceof GameTitle)) return;
//
//		GameTitle g = (GameTitle) o;
//
//		boolean sameItems = true;
//
//		if (platModel.getSize() != g.platforms.length + 1) {
//			sameItems = false;
//		}
//
//		if (sameItems) {
//			for (int i = 1; i < platModel.getSize(); i++) {
//				if (platModel.getElementAt(i) != g.platforms[i - 1]) {
//					sameItems = false;
//					break;
//				}
//			}
//		}
//
//		if (!sameItems) {
//			Object lastSelected = platModel.getSelectedItem();
//			platModel.removeAllElements();
//			platModel.addElement(selectPlat);
//
//			for (Platform p : g.platforms) {
//				platModel.addElement(p);
//			}
//
//			platModel.setSelectedItem(lastSelected);
//		}
//
//
//		sameItems = true;
//		Instrument.Group[] groups = g.getSupportedInstrumentGroups();
//
//		if (instModel.getSize() != groups.length + 1) {
//			sameItems = false;
//		}
//
//		if (sameItems) {
//			for (int i = 1; i < instModel.getSize(); i++) {
//				if (instModel.getElementAt(i) != groups[i - 1]) {
//					sameItems = false;
//					break;
//				}
//			}
//		}
//
//		if (!sameItems) {
//			Object lastSelected = instModel.getSelectedItem();
//			instModel.removeAllElements();
//			instModel.addElement(selectPlat);
//
//			for (Instrument.Group grp : groups) {
//				instModel.addElement(grp);
//			}
//
//			instModel.setSelectedItem(lastSelected);
//		}
	}//GEN-LAST:event_gameComboActionPerformed

	private void platComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_platComboActionPerformed
		
	}//GEN-LAST:event_platComboActionPerformed

	private void instComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instComboActionPerformed
		
	}//GEN-LAST:event_instComboActionPerformed

	private void diffComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diffComboActionPerformed
		
	}//GEN-LAST:event_diffComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox diffCombo;
    private javax.swing.JComboBox gameCombo;
    private javax.swing.JButton goButton;
    private javax.swing.JComboBox instCombo;
    private javax.swing.JComboBox platCombo;
    // End of variables declaration//GEN-END:variables

}
