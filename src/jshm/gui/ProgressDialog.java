/*
 * -----LICENSE START-----
 * JSHManager - A Java-based tool for managing one's ScoreHero account.
 * Copyright (C) 2008 Tim Mullin
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 * -----LICENSE END-----
*/
/*
 * ProgressDialog.java
 *
 * Created on September 19, 2008, 4:10 PM
 */

package jshm.gui;

import java.awt.Container;

import org.netbeans.spi.wizard.ResultProgressHandle;

/**
 * This just has a label and a progress bar for long running
 * operations. It implements {@link ResultProgressHandle} even
 * though this has nothing to do with a wizard since the data
 * updaters use it and I didn't want to create my own wrapper.
 * @author  Tim
 */
public class ProgressDialog extends javax.swing.JDialog implements ResultProgressHandle {
	public ProgressDialog() {
		this(null);
	}
	
	public ProgressDialog(java.awt.Frame parent) {
		this(parent, false);
	}
	
    /** Creates new form ProgressDialog */
    public ProgressDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progPanel = new jshm.gui.components.ProgressLogPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(progPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(progPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	GuiUtil.init();
                ProgressDialog dialog = new ProgressDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setLocationRelativeTo(null);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private jshm.gui.components.ProgressLogPanel progPanel;
    // End of variables declaration//GEN-END:variables
    
    
    // implement org.netbeans.spi.wizard.ResultProgressHandle
    // forward to progPanel
	
	@Override
	public void addProgressComponents(Container panel) {
		progPanel.addProgressComponents(panel);
	}

	@Override
	public void failed(String message, boolean canNavigateBack) {
		progPanel.failed(message, canNavigateBack);
	}

	public void finished() {
		finished(null);
	}
	
	@Override
	public void finished(Object result) {
		progPanel.finished(result);
		this.dispose();
	}

	@Override
	public boolean isRunning() {
		return progPanel.isRunning();
	}

	@Override
	public void setBusy(String description) {
		progPanel.setBusy(description);
	}

	@Override
	public void setProgress(int currentStep, int totalSteps) {
		progPanel.setProgress(currentStep, totalSteps);
	}

	@Override
	public void setProgress(String description, int currentStep, int totalSteps) {
		progPanel.setProgress(description, currentStep, totalSteps);
	}
}
